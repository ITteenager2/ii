from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict

def get_start_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="–ù–ê–ß–ê–¢–¨", callback_data="start_using_bot")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_subscription_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{config.CHANNEL_ID[1:]}")],
        [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_premium_purchase_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="üî• 3 –¥–Ω—è –∑–∞ 1 —Ä—É–±–ª—å", callback_data="trial_subscription")],
        [InlineKeyboardButton(text="‚úÖ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="full_subscription")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_payment_method_keyboard(subscription_type: str) -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="Yookassa", callback_data=f"pay_yookassa_{subscription_type}")],
        [InlineKeyboardButton(text="TG Stars", callback_data=f"pay_tgstars_{subscription_type}")],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_premium")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_subscription_period_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="üî• 3 –¥–Ω—è –∑–∞ 1 —Ä—É–±–ª—å", callback_data="subscribe_trial")],
        [InlineKeyboardButton(text="üëç –ù–µ–¥–µ–ª—å–Ω–∞—è ‚îÉ199 —Ä—É–±.", callback_data="subscribe_week")],
        [InlineKeyboardButton(text="üëç –ú–µ—Å—è—á–Ω–∞—è ‚îÉ499 —Ä—É–±.", callback_data="subscribe_month")],
        [InlineKeyboardButton(text="üî• –ì–æ–¥–æ–≤–∞—è ‚îÉ2990 —Ä—É–±.", callback_data="subscribe_year")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_premium")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_check_payment_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="‚≠êÔ∏è–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data="check_payment")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_course_selection_keyboard(available_courses: List[Dict[str, str]]) -> InlineKeyboardMarkup:
    keyboard = []
    for course in available_courses:
        keyboard.append([InlineKeyboardButton(
            text=f"–£—Ä–æ–∫ {course['number']}: {course['title']}",
            callback_data=f"select_course_{course['number']}"
        )])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_lesson_complete_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="–ü—Ä–æ—á–∏—Ç–∞–ª", callback_data="lesson_complete")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_support_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", callback_data="contact_support")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_main_menu() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton(text="–í—ã–±–æ—Ä –Ω–µ–π—Ä–æ—Å–µ—Ç–∏", callback_data="select_neural_network")],
        [InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
        [InlineKeyboardButton(text="Premium", callback_data="premium")],
        [InlineKeyboardButton(text="–ë–æ–Ω—É—Å–Ω—ã–π –∫—É—Ä—Å", callback_data="bonus_course")],
        [InlineKeyboardButton(text="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π", callback_data="invite_friends")],
        [InlineKeyboardButton(text="–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="tech_support")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_neural_network_menu(user: dict, selected_nn: str) -> InlineKeyboardMarkup:
    has_free_generations = user['free_generations'] > 0
    is_premium = user['premium']
    
    def get_button_text(nn_name: str, locked: bool, selected: bool) -> str:
        prefix = "üîí " if locked else ""
        suffix = " ‚úÖ" if selected else ""
        return f"{prefix}{nn_name}{suffix}"
    
    keyboard = [
        [InlineKeyboardButton(
            text=get_button_text("ChatGPT-4 Omni Mini", False, selected_nn == "gpt4o_mini"),
            callback_data="select_nn_gpt4o_mini"
        )],
        [InlineKeyboardButton(
            text=get_button_text("ChatGPT-4 Omni", not (has_free_generations or is_premium), selected_nn == "gpt4o"),
            callback_data="select_nn_gpt4o"
        )],
        [InlineKeyboardButton(
            text=get_button_text("OpenAI o1", not is_premium, selected_nn == "openai_o1"),
            callback_data="select_nn_openai_o1"
        )],
        [InlineKeyboardButton(
            text=get_button_text("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ Stable Diffusion", not (has_free_generations or is_premium), selected_nn == "stable_diffusion"),
            callback_data="select_nn_stable_diffusion"
        )],
        [InlineKeyboardButton(
            text=get_button_text("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ Dall-E 3", not (has_free_generations or is_premium), selected_nn == "dalle3"),
            callback_data="select_nn_dalle3"
        )],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
from config import config

